name: Deploy api

on:
  push:
    branches: ["main"]

jobs:
  deploy_api:
    runs-on: self-hosted

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: SSH into Ubuntu Server and Deploy
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            # Hiển thị phiên bản Node.js hiện tại
            echo "Node.js version $(node -v) is installed."

            # Clone the repository if not already cloned
            if [ ! -d "phuoggiang-clone" ]; then
              git clone https://github.com/nd-thuong/phuoggiang-clone.git
            fi

            # Pull the latest changes
            cd phuoggiang-clone
            git pull origin main

            # Install Node.js and npm if not installed
            if ! command -v npm &> /dev/null; then
              echo "npm could not be found, installing Node.js and npm"
              curl -sL https://deb.nodesource.com/setup_20.x | sudo -E bash -
              sudo apt-get install -y nodejs
            else
              echo "Node.js and npm are already installed"
            fi

            if ! command -v pm2 &> /dev/null; then
              echo "pm2 could not be found, installing pm2"
              sudo npm install -g pm2
            else
              echo "pm2 is already installed"
            fi

            # Thiết lập file .env cho backend
            cd backend
            cat <<EOF > .env
            APP_JWT_ACCESS_TOKEN_KEY=${{ secrets.APP_JWT_ACCESS_TOKEN_KEY }}
            APP_JWT_ACCESS_TOKEN_SECRET=${{ secrets.APP_JWT_ACCESS_TOKEN_SECRET }}
            APP_JWT_ACCESS_TOKEN_EXPIRATION_TIME=${{ secrets.APP_JWT_ACCESS_TOKEN_EXPIRATION_TIME }}
            APP_JWT_REFRESH_TOKEN_KEY=${{ secrets.APP_JWT_REFRESH_TOKEN_KEY }}
            APP_JWT_REFRESH_TOKEN_SECRET=${{ secrets.APP_JWT_REFRESH_TOKEN_SECRET }}
            APP_HASH_PASSWORD_KEY=${{ secrets.APP_HASH_PASSWORD_KEY }}
            POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}
            POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}
            POSTGRES_USER=${{ secrets.POSTGRES_USER }}
            POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
            POSTGRES_DB=${{ secrets.POSTGRES_DB }}
            POSTGRES_URL=${{ secrets.POSTGRES_URL }}
            CLOUDINARY_CLOUD_NAME=${{ secrets.CLOUDINARY_CLOUD_NAME }}
            CLOUDINARY_API_KEY=${{ secrets.CLOUDINARY_API_KEY }}
            CLOUDINARY_API_SECRET=${{ secrets.CLOUDINARY_API_SECRET }}
            NODE_ENV=${{ secrets.NODE_ENV }}
            EOF

            pm2 delete nestjs-app || true 
            sudo npm install
            sudo npm run build
            pm2 start dist/main.js --name nestjs-app --watch --time
            pm2 save
            # sudo npm run start:prod
